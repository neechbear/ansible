#!/bin/bash

set -uE -o pipefail

resolve_all_names() {
    local domain="tfb.net"
    for h in "$@"
    do
        for host in "$h" "${h%%.*}" "$h.$domain" \
            "${h//./-pvt.}" "${h//./-pub.}" "${h//./-mgmt.}" \
            "${h//./-pvt.}.$domain" "${h//./-pub.}.$domain" "${h//./-mgmt.}.$domain"
        do
            host "$host" 2>&1 \
                | grep -v NXDOMAIN \
                | egrep -wo "(([0-9]+\.){3}[0-9]+|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}|[a-z0-9][a-z0-9\.-]+\.($domain|cat|sh))" \
                | sort -u
        done
        echo "$h"
        echo "${h%%.*}"
    done
}

get_ssh_port() {
    case "$1" in
        10.1.2.*|pdu*|brienne-mgmt*)
            echo 22
            ;;
        *)
            echo 1009
            ;;
    esac
}

main() {
    declare -A host_groups=(
        [mlt]="bran.mlt sansa.mlt brienne.mlt pdu1.mlt smsgw1.mlt"
        [rbsov]="tyrion.rbsov theon.rbsov"
        [gce]="jorah.gce rootme.sh loaf.cat ns1.gce"
        )
    for group in "${!host_groups[@]}"
    do
        echo "# Automatically generated by $0 at $(date)" > "ssh_known_hosts.$group.j2"
        for host in $(resolve_all_names ${host_groups[$group]} | sort -u)
        do
            local port="$(get_ssh_port $host)"
            local keyscan="$(ssh-keyscan -H -t rsa -p $port $host 2>/dev/null)"
            local pubkey1="${keyscan##* }"
            local pubkey2="$(ssh -p $port -o StrictHostKeyChecking=no -o LogLevel=QUIET "$host" "cut -d' ' -f2 /etc/ssh/ssh_host_rsa_key.pub")"
            if [[ -z "$pubkey1" ]]
            then
                echo "No host key returned by $host ($group)." >&2
            elif [[ "$pubkey1" == "$pubkey2" ]]
            then
                echo "Added $host to $group."
                echo "$keyscan" >> "ssh_known_hosts.$group.j2"
            else
                echo "Unknown $host ($group); $keyscan" >&2
            fi
        done
    done
}

main "$@"

