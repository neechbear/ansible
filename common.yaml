---
# file: common.yaml
# vim:ft=ansible:

- hosts: all
  roles:
    - role: 'custom-facts'
      tags: [ 'custom-facts', 'facts' ]
  tasks:
    - group_by: key=distribution_{{ ansible_distribution }}
    - group_by: key=os_{{ ansible_os_family }}
    - group_by: key=machine_{{ ansible_machine }}
    - group_by: key=virt_{{ ansible_virtualization_type }}_{{ ansible_virtualization_role }}

- name: motd
  hosts: os_Debian
  gather_facts: False
  roles:
    - motd

- name: common
  hosts: tfb
  tags: [ 'common' ]
  tasks:
    - lineinfile:
        dest: '/etc/hosts'
        regexp: '^127\.0\.1\.1\s+'
        state: 'absent'
  roles:
    - role: 'mta'
      tags: [ 'mail', 'mta' ]
    - role: 'packages'
      tags: [ 'packages' ]
    - role: 'scripts'
      tags: [ 'scripts' ]
    - role: 'zabbix-agent'
      tags: [ 'zabbix', 'zabbix-agent', 'monitoring' ]

- name: harden
  hosts: tfb
  tags: [ 'security' ]
  tasks:
    - mount:
        state: 'present'
        src: 'tmpfs'
        name: '/run/shm'
        fstype: 'tmpfs'
        opts: 'defaults,noexec,nosuid'
        dump: '0'
        passno: '0'
      tags: [ 'tmpfs', 'shm' ]
    - command: dpkg-statoverride --list /bin/su
      register: su_statoverride
      changed_when: false
      failed_when: false
      tags: [ 'sudo', 'su' ]
    - command: dpkg-statoverride --update --add root sudo 4750 /bin/su
      when: not su_statoverride.stdout == "root sudo 4750 /bin/su"
      tags: [ 'sudo', 'su' ]
    - sysctl:
        state: 'present'
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        reload: 'yes'
        sysctl_set: 'yes'
        ignoreerrors: 'no'
      with_items: '{{ sysctl_settings|default([]) }}'
      when: sysctl_settings is defined
      tags: [ 'sysctl', 'kernel', 'network' ]
  roles:
    - role: 'unattended-updates'
      tags: [ 'updates', 'unattended-updates' ]
    - role: 'openssh-server'
      tags: [ 'openssh-server' ]
    - role: 'openssh-client'
      tags: [ 'openssh-client' ]
    - role: 'fail2ban'
      tags: [ 'fail2ban' ]
      when: not ansible_system_vendor in [ 'Google' ]
    - role: 'antivirus'
      tags: [ 'antivirus' ]
      when: not ansible_system_vendor in [ 'Google' ]
    - role: 'logcheck'
      tags: [ 'logcheck' ]
      when: not ansible_system_vendor in [ 'Google' ]

