#!/bin/bash

set -euo pipefail

decode () {
  printf '%b' "${1//%/\\x}"
}

main () {
  if [[ $# -ne 2 ]] ; then
    >&2 echo "Syntax: ${0##*/} <wiki_path> <output_path>"
    return 1
  fi

  local wiki_path="${1%%/}"
  local static_path="${2:-/var/www/static}"
  local base_path="$(dirname "$wiki_path")"
  local wiki_name="$(basename "$wiki_path")"

  if [[ ! -d "$wiki_path" || ! -r "$wiki_path" || ! -x "$wiki_path" ]] ; then
    >&2 echo "Source wiki path '$static_path' is not writeable."
    return 1
  fi

  if [[ ! -d "$static_path" || ! -w "$static_path" ]] ; then
    >&2 echo "Output path '$static_path' is not writeable."
    return 1
  fi

  cd "$base_path"

  find "$wiki_path" -name '*.tid.tid.tid*' -or -name 'Draft_of_*.tid' -delete
  rm "$wiki_name/output/static/"*.html
  tiddlywiki "$wiki_name" --rendertiddler $:/core/templates/alltiddlers.template.html index.html text/plain
  tiddlywiki "$wiki_name" --rendertiddlers '[!is[system]]' $:/core/templates/static.tiddler.html static text/plain
  tiddlywiki "$wiki_name" --rendertiddler $:/core/templates/static.template.css static/static.css text/plain

  rsync -a --delete --delete-after "$wiki_name/output/static/" "$static_path"
  rsync -a "$wiki_name/output/index.html" "$static_path"

  cd "$static_path"
  find . -mindepth 1 -maxdepth 1 -type f | while read file ; do
    lcfile="${file,,}"
    for symlink in "$lcfile" "$(decode "$file")" "$(decode "$lcfile")" \
      "$(decode "$file" | tr " " "_")" "$(decode "$lcfile" | tr " " "_")" \
      "$(decode "$file" | tr -d " ")" "$(decode "$lcfile" | tr -d " ")"
    do
      if ! [ "$symlink" == "$file" ] && ! [[ -e  "$symlink" ]] ; then
        ln -s "$file" "$symlink"
      fi
    done
  done
}

main "$@"

